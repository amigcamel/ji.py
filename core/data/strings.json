{
  "FixTypo": {
    "name": "字串取代",
    "description": "sentence 裡面有一個錯字 Pyton，請把它取代為 Python",
    "presets": {
      "sentence": "I love Pyton",
      "ans": null
    },
    "hint": "str.replace",
    "answer": "I love Python",
    "criteria": [
      "self.local.get('ans') == self.answer",
      "'.replace' in snippet"
    ],
    "test_code": [
      "ans = sentence.replace('Pyton', 'Python')"
    ]
  },
  "CountLetter": {
    "name": "字串計數",
    "description": "計算 sentence 中出現 \"說\" 的次數",
    "presets": { 
      "sentence": "我跟你說你不要跟別人說你如果跟別人說我就不要跟你說你如果一定要跟別人說你就不要跟別人說是我跟你說叫你不要跟別人說",
      "ans": null
    },
    "hint": "str.count",
    "answer": 8,
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = sentence.count('說')"
    ]
  },
  "StripString": {
    "name": "修剪字串",
    "description": "去除字首字尾多餘的空白",
    "presets": {
      "sentence": "  有些人喜歡，有些人不喜歡，因為他有一種哈味      ",
      "ans": null
    },
    "hint": "str.strip",
    "answer": "有些人喜歡，有些人不喜歡，因為他有一種哈味",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = sentence.strip()"
    ]
  },
  "ConcatenateString": {
    "name": "字串相加",
    "description": "將 x 與 y 字串相加",
    "presets": {
      "x": "臺灣大學",
      "y": "語言學研究所",
      "ans": null
    },
    "hint": "+",
    "answer": "臺灣大學語言學研究所",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = x + y"
    ]
  },
  "RepeatString": {
    "name": "重複字串",
    "description": "將 x 重複三次",
    "presets": {
      "x": "OMG!",
      "ans": null
    },
    "hint": "*",
    "answer": "OMG!OMG!OMG!",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = x * 3"
    ]
  },
  "CountString": {
    "name": "計算字串長度",
    "description": "計算 sentence 的字串長度",
    "presets": {
      "sentence": "紅鯉魚家有頭小綠驢叫李屢屢，綠鯉魚家有頭小紅驢叫呂里里，紅鯉魚說他家的李屢屢要比綠鯉魚家的呂里里綠，綠鯉魚說他家的呂里里要比紅鯉魚家的李屢屢紅，不只是紅鯉魚比綠鯉魚的驢綠，還是綠鯉魚比紅鯉魚的驢紅",
      "ans": null
    },
    "hint": "len()",
    "answer": 98,
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = len(sentence)"
    ]
  },
  "CapitalizeString": {
    "name": "首字大寫",
    "description": "將 name 首字大寫",
    "presets": {
      "name": "owen",
      "ans": null
    },
    "hint": "str.capitalize",
    "answer": "Owen",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = name.capitalize()"
    ]
  },
  "UpperString": {
    "name": "大寫轉換",
    "description": "將 place 轉換成大寫",
    "presets": {
      "place": "taiwan",
      "ans": null
    },
    "hint": "str.upper",
    "answer": "TAIWAN",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = place.upper()"
    ]
  },
  "LowerString": {
    "name": "小寫轉換",
    "description": "將 subject 轉換成小寫",
    "presets": {
      "subject": "LINGUISTICS",
      "ans": null
    },
    "hint": "str.lower",
    "answer": "linguistics",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = subject.lower()"
    ]
  },
  "TitleString": {
    "name": "字首大寫",
    "description": "將 sentence 的每個字的首字轉換成大寫",
    "presets": {
      "sentence": "graduate institute of linguistics",
      "ans": null
    },
    "hint": "str.title",
    "answer": "Graduate Institute Of Linguistics",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = sentence.title()"
    ]
  },
  "ContainString": {
    "name": "包含字串",
    "description": "檢查 sentence 是否包含「官網」該詞",
    "presets": {
      "sentence": "鋼彈盼望傍晚上南港展覽館官方網站觀看萬丈亮燦光芒綻放",
      "target": "官網",
      "ans": null
    },
    "hint": "in",
    "answer": false,
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = target in sentence"
    ]
  },
  "StartswithString": {
    "name": "字串開頭",
    "description": "檢查 sentence 是否為 「你爸」開頭",
    "presets": {
      "sentence": "你爸在你背後，他非常火",
      "ans": null
    },
    "hint": "str.startswith",
    "answer": true,
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = sentence.startswith('你爸')"
    ]
  },
  "EndswithString": {
    "name": "字串結尾",
    "description": "檢查 filename 之副檔名是否為 .jpg",
    "presets": {
      "filename": "怕.jpg",
      "ans": null
    },
    "hint": "str.endswith",
    "answer": true,
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = filename.endswith('.jpg')"
    ]
  },
  "SplitString": {
    "name": "字串分割",
    "description": "將 sentence 依逗點分割並輸出成 list",
    "presets": {
      "sentence": "下雨天,留客天,天留,我不留",
      "ans": null
    },
    "hint": "str.split",
    "answer": ["下雨天", "留客天", "天留", "我不留"],
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = sentence.split(',')"
    ]
  },
  "JoinString": {
    "name": "合併字串",
    "description": "將 tokens 合併為一個字串",
    "presets": {
      "tokens": ["喜歡", "你", "溫暖", "的", "文字", "洋溢", "著", "滿滿", "的", "幸福"],
      "ans": null 
    },
    "hint": "str.join",
    "answer": "喜歡你溫暖的文字洋溢著滿滿的幸福",
    "criteria": [
      "self.local.get('ans') == self.answer"
    ],
    "test_code": [
      "ans = ''.join(tokens)"
    ]
  }
}
